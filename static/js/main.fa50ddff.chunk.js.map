{"version":3,"sources":["logo.svg","components/Header.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","root","title","Header","classes","className","AppBar","position","Toolbar","IconButton","edge","menuButton","color","aria-label","src","logo","width","height","alt","tooltip","Typography","variant","App","props","state","newitem","list","todovalue","id","Date","now","value","isDone","this","push","setState","updatedlist","filter","item","input","div","clasName","Input","placeholder","inputProps","onChange","e","updateinput","target","Button","href","onClick","additem","disabled","length","ListGroup","map","Container","Jumbotron","ListGroupItem","style","listStyleType","backgroundColor","margin","padding","marginLeft","deleteitem","justify","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAAe,MAA0B,iCCSnCA,EAAYC,aAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,GAENC,MAAO,OAIM,SAASC,IACtB,IAAMC,EAAUN,IAEhB,OACE,qBAAKO,UAAWD,EAAQH,KAAxB,SACE,cAACK,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACE,eAACC,EAAA,EAAD,WACE,cAACC,EAAA,EAAD,CAAYC,KAAK,QAAQL,UAAWD,EAAQO,WAAYC,MAAM,UAAUC,aAAW,OAAnF,SACA,qBAAKC,IAAKC,EAAMC,MAAO,GAAIC,OAAQ,GAAIC,IAAI,OAAOC,QAAQ,GAAGjB,MAAM,WAEnE,cAACkB,EAAA,EAAD,CAAYC,QAAQ,KAAKT,MAAM,YAAYP,UAAWD,EAAQF,MAA9D,6B,qECkHKoB,E,kDAtHb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IACDC,MAAM,CACTC,QAAQ,GACRC,KAAK,IAJS,E,oDAOVC,GACN,GAAkB,KAAdA,EAAiB,CACnB,IAAMF,EAAQ,CACZG,GAAGC,KAAKC,MACRC,MAAMJ,EACNK,QAAO,GAEHN,EAAI,YAAMO,KAAKT,MAAME,MAC3BA,EAAKQ,KAAKT,GAGVQ,KAAKE,SAAS,CACZT,OACAD,QAAQ,Q,iCAMHG,GACT,IACMQ,EADK,YAAIH,KAAKT,MAAME,MACHW,QAAO,SAAAC,GAAI,OAAEA,EAAKV,KAAOA,KAChDK,KAAKE,SAAS,CAACT,KAAKU,M,kCAEZG,GACVN,KAAKE,SAAS,CAACV,QAAQc,M,+BAGd,IAAD,OACR,OACE,sBAAKC,KAAG,EAACnC,UAAU,MAAnB,UACA,cAACF,EAAD,IAEA,oBAAIE,UAAU,YAAd,0BACA,sBAAKoC,SAAS,YAAd,UACA,cAACC,EAAA,EAAD,CACCC,YAAY,eACZC,WAAY,CAAE,aAAc,eAC5Bb,MAAOE,KAAKT,MAAME,KAAKD,QACxBoB,SAAU,SAAAC,GAAC,OAAE,EAAKC,YAAYD,EAAEE,OAAOjB,UAEvC,cAACkB,EAAA,EAAD,CACA5B,QAAQ,YACRT,MAAM,UACNsC,KAAK,qBACLC,QAAS,kBAAM,EAAKC,QAAQ,EAAK5B,MAAMC,UACvC4B,UAAWpB,KAAKT,MAAMC,QAAQ6B,OAL9B,sBAQO,uBAAK,uBACd,cAACC,EAAA,EAAD,UACCtB,KAAKT,MAAME,KAAK8B,KAAI,SAAAlB,GACnB,OACE,cAACmB,EAAA,EAAD,CAAW7C,MAAM,UAAjB,SACA,cAAC8C,EAAA,EAAD,UACA,eAACC,EAAA,EAAD,CAA6BC,MAAO,CAACC,cAAc,OAAOC,gBAAgB,YAAaC,OAAO,GAAIC,QAAQ,IAA1G,UAQG1B,EAAKP,MAEN,cAACtB,EAAA,EAAD,CAAYmD,MAAO,CAAEK,WAAW,IAAhC,SACA,cAAC,IAAD,CACAd,QAAS,kBAAI,EAAKe,WAAW5B,EAAKV,KAElChB,MAAM,YAAYgD,MAAO,GAAIO,QAAQ,eAdnB7B,EAAKV,uB,GA/DbwC,IAAMC,WCTTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.fa50ddff.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport AppBar from '@material-ui/core/AppBar';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\n//import Button from '@material-ui/core/Button';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport logo from '../logo.svg'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n  },\r\n  title: {\r\n  },\r\n}));\r\n\r\nexport default function Header() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <AppBar position=\"static\">\r\n        <Toolbar>\r\n          <IconButton edge=\"start\" className={classes.menuButton} color=\"inherit\" aria-label=\"menu\">\r\n          <img src={logo} width={60} height={40} alt=\"icon\" tooltip=\"\" title=\"icon\"/>\r\n          </IconButton>\r\n          <Typography variant=\"h6\" color='secondary' className={classes.title}>\r\n            ToDoList\r\n          </Typography>\r\n         \r\n        </Toolbar>\r\n      </AppBar>\r\n    </div>\r\n  );\r\n}\r\n","//import logo from './logo.svg';\n//import { Typography } from '@material-ui/core';\nimport React from 'react'\nimport './App.css';\nimport Header from './components/Header';\nimport Input from '@material-ui/core/Input';\nimport { Button, Container, IconButton, Typography } from '@material-ui/core';\nimport DeleteForeverIcon from '@material-ui/icons/DeleteForever';\nimport { Jumbotron, ListGroup, ListGroupItem } from 'reactstrap';\n//import Carasoul from './components/Carasoul';\n//import List from '@material-ui/core/List';\n//import ListItem from '@material-ui/core/ListItem';\n//import ListItemAvatar from '@material-ui/core/ListItemAvatar';\n//import ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\n//import ListItemText from '@material-ui/core/ListItemText';\n//import Avatar from '@material-ui/core/Avatar';\n//import DeleteIcon from '@material-ui/icons/Delete';\n//import { Toast, ToastBody, ToastHeader } from 'reactstrap';\n\n\n\nclass App extends React.Component {\n  constructor(props){\n    super(props);\n    this.state={\n      newitem:\"\",\n      list:[]\n    }\n  }\n  additem(todovalue){\n    if (todovalue !== \"\"){\n      const newitem={\n        id:Date.now(),\n        value:todovalue,\n        isDone:false\n      };\n      const list =[...this.state.list];\n      list.push(newitem);\n\n\n      this.setState({\n        list,\n        newitem:\"\"\n      });\n\n    }\n  }\n\n  deleteitem(id){\n    const list=[...this.state.list];\n    const updatedlist=list.filter(item=>item.id !== id);\n    this.setState({list:updatedlist})\n  }\nupdateinput(input){\n  this.setState({newitem:input});\n}\n  \n  render(){\n  return (\n    <div div className=\"App\">\n    <Header/>\n    \n    <h1 className=\"app-title\">Have U Done?</h1>\n    <div clasName='Container'>\n    <Input\n     placeholder=\"write a todo\" \n     inputProps={{ 'aria-label': 'description' }} \n     value={this.state.list.newitem}\n    onChange={e=>this.updateinput(e.target.value)} \n    />\n    <Button \n    variant=\"contained\" \n    color=\"primary\" \n    href=\"#contained-buttons\"\n    onClick={() => this.additem(this.state.newitem)}\n    disabled={!this.state.newitem.length}\n    >\n  add todo\n  </Button><br/><br/>\n  <ListGroup >\n  {this.state.list.map(item =>{\n    return(\n      <Container color=\"primary\"> \n      <Jumbotron>\n      <ListGroupItem key={item.id} style={{listStyleType:'none',backgroundColor:'secondary' ,margin:10 ,padding:10}} >\n      {/*< input\n       type=\"checkbox\"\n        name=\"isDone\" \n        checked={item.isDone}\n        onChange={()=>{}}\n      />*/}\n      \n        {item.value}\n\n        <IconButton style={{ marginLeft:10}}>\n        <DeleteForeverIcon \n        onClick={()=>this.deleteitem(item.id)}\n\n        color=\"secondary\" style={{}} justify=\"center\"\n        />\n        </IconButton >\n        \n      </ListGroupItem>\n      </Jumbotron>\n      </Container>\n    )\n  })}\n  \n    </ListGroup>\n  \n    {/*<div >\n  \n    <List  style={{width:400,backgroundColor:'primary',justifyContent:'center'}}>\n    {this.state.list.map(item =>{\n      return(\n        <ListItem>\n          <ListItemAvatar>\n          <Avatar alt=\"Remy Sharp\" src={logo} />\n          </ListItemAvatar>\n          <ListItemText>\n          {item.value}\n          </ListItemText>\n          <ListItemSecondaryAction>\n            <IconButton edge=\"end\" aria-label=\"delete\"  >\n              <DeleteIcon  onClick={()=>this.deleteitem(item.id)}/>\n            </IconButton>\n          </ListItemSecondaryAction>\n        </ListItem>\n      )\n    })}\n    </List>\n  </div>*/}\n\n\n</div>\n </div>\n    \n  );\n}\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}